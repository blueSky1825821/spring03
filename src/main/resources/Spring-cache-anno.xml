<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--<cache:annotation-driven />，
    这个配置项缺省使用了一个名字叫 cacheManager 的缓存管理器，
    这个缓存管理器有一个 spring 的缺省实现，
    即 org.springframework.cache.support.SimpleCacheManager，
    这个缓存管理器实现了我们刚刚自定义的缓存管理器的逻辑，它需要配置一个属性 caches，
    即此缓存管理器管理的缓存集合，除了缺省的名字叫 default 的缓存，
    我们还自定义了一个名字叫 accountCache 的缓存，使用了缺省的内存存储方案 ConcurrentMapCacheFactoryBean，
    它是基于 java.util.concurrent.ConcurrentHashMap 的一个内存缓存实现方案。-->
    <cache:annotation-driven/>
    <bean id="accountService" class="com.cache.spring.AccountService"/>
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      p:name="default"/>

                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
                      p:name="accountCache"/>
            </set>
        </property>
    </bean>
</beans>